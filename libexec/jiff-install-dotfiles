#!/usr/bin/env bash
# Usage: jiff dotfiles
# Summary: Link dotfiles to home directory locations

source std.sh
source distro.sh

main() {
  std::exit_if_is_directory "${HOME}/dotfiles"
  jiff install git
  jiff install ranger
  std::push_dir "${HOME}"
  touch .hushlogin
  mkdir -pm 700 dotfiles
  setfacl -m g::-,o:-,d:g::-,d:o:- dotfiles
  git clone git://github.com/binaryphile/dotfiles
  cd dotfiles
  git remote set-url origin git@github.com:binaryphile/dotfiles
  # ln -sfT $(hostname) current
  cd "${HOME}"
  for file in ctags gemrc gitconfig gitignore_global inputrc tmux.conf Xmodmap pryrc ruby-version; do
    std::make_symlink ".${file}" "${HOME}/dotfiles/${file}"
  done
  mkdir -pm 700 .ssh
  for file in known_hosts config; do
    std::make_symlink ".ssh/${file}" "${HOME}/dotfiles/ssh/${file}"
  done
  mkdir -p .bundle
  std::make_symlink ".bundle/config" "${HOME}/dotfiles/bundle-config"
  mkdir -p .config
  cd .config
  mkdir -p fish
  std::make_symlink "fish/config.fish" "${HOME}/dotfiles/fish/config.fish"
  mkdir -p ranger
  ranger --copy-config=all
  for file in rc.conf rifle.conf scope.sh commands.py; do
    std::make_symlink "ranger/${file}" "${HOME}/dotfiles/ranger/${file}"
  done
  std::pop_dir
}

return 2>/dev/null || true
std::strict_mode on
main "$@"
