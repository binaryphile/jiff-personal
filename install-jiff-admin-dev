#!/usr/bin/env bash

readonly install_dir=/opt/basher
readonly repo_uri=bertrand:tmp
readonly git_version=2.7.4
readonly git_dir=git-$git_version
readonly git_filename=$git_dir.tar.gz

main() {
  [[ -d $install_dir ]] && exit
  which git >/dev/null 2>&1 || install_git
  vc_slash
  install_basher
  install_jiff
  success_message
}

install_basher() {
  push_dir /etc/profile.d
  cat <<EOM | sudo tee basher.sh
  [[ -n \$BASHER_ROOT ]] || (( \$(/usr/bin/id -u) < 500 || \$(/usr/bin/id -u) == 10000 )) && return
  export BASHER_ROOT=$install_dir
  export PATH=\$PATH:$install_dir/bin
  eval "\$(basher init -)"
EOM
  git add --force basher.sh
  git commit --message "basher"
  cd /opt
  sudo mkdir basher
  sudo chown "$USER":prodadm basher
  chmod g+rwxs basher
  setfacl -m d:g::rwx basher
  git clone git://github.com/binaryphile/basher
  cd basher/libexec
  pop_dir
}

install_git() {
  read -d "" -a prereqs <<'EOM' ||:
gcc
curl-devel
expat-devel
gettext-devel
openssl-devel
perl-devel
zlib-devel
perl-Error
EOM
  for prereq in "${prereqs[@]}"; do
    sudo yum -y install "$prereq"
  done
  mkdir -p "$HOME"/tmp
  push_dir "$HOME"
  scp "$repo_uri/$git_filename" tmp
  cd tmp
  tar xzf "$git_filename"
  cd "$git_dir"
  make configure
  ./configure --prefix=/usr
  make all
  sudo make install
  cd ..
  rm -rf "$git_dir"
  rm "$git_filename"
  pop_dir
}

install_jiff() {
  export BASHER_ROOT=$install_dir
  "$install_dir"/bin/basher install binaryphile/jiff-personal
}

pop_dir() { popd >/dev/null ;}

push_dir() { pushd "$1" >/dev/null ;}

success_message() {
  cat <<EOM

Note: If you are using bash as your shell, run "exec bash" to load jiff
onto your path.  Otherwise follow the basher instructions for loading
basher into your shell's environment then source those files or
re-login.

You'll also want to run "jiff set context" to set your context.
EOM
}

vc_slash () {
  push_dir /
  sudo mkdir -p .git
  sudo chown "$USER":prodadm .git
  chmod g+rwxs .git
  setfacl -m d:g::rwx .git
  sudo touch .gitignore
  sudo chown "$USER":prodadm .gitignore
  chmod g+rw .gitignore
  cat <<'EOM' > .gitignore
*
id_*
*.pem
*.pfx
*.key
*.key.*
EOM
  git init
  git add -f .gitignore
  git config --global user.name "Administrative User"
  git config --global user.email aview@accelerated.com
  git commit -m "initial commit"
  pop_dir
}

return 0 2>/dev/null ||:

set -o errexit
set -o nounset
set -o pipefail

main "$@"
