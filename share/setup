#!/usr/bin/env bash

setup_globals () {
  usage='
    Usage:  setup <context>

      Setup the local host with dotfiles and standard configuration.

      <context> is one of the contexts in dotfiles/contexts.'

  chmod='chmod --'
  ln='ln --symbolic --force --'
  mkdir='mkdir --parents --'
  rm='rm --force --'
}

setup_main () {
  local context=$1
  local home=${2:-$HOME}

  touch .hushlogin
  setup_git           "$home"
  create_ssh_config   "$home"
  clone_dotfiles      "$home" "$context"
  clone_dotvim        "$home"
  setup_liquidprompt  "$home"
  setup_bashrc        "$home"
  setup_ssh           "$home"
}

clone_dotfiles () {
  local home=$1
  local context=$2
  local dotfiles
  local file
  local file_ary=()

  dotfiles=$home/dotfiles
  [[ ! -d $dotfiles ]] && mkdir -- "$dotfiles";:
  $chmod 700 "$dotfiles"
  setfacl -m d:g::-,d:o:- -- "$dotfiles"
  git clone git://github.com/binaryphile/dotfiles "$dotfiles"
  file_ary=(
    bash/dir_colors
    bash/inputrc
    gitconfig
    gitignore_global
  )
  for file in "${file_ary[@]}"; do
    $ln "$dotfiles/$file" "$home"/."${file##*/}"
  done
  $ln contexts/"$context" "$dotfiles"/context
}

clone_dotvim () { (
  local home=$1
  local vim

  vim=$home/.vim
  [[ -d $vim ]] && return
  git clone --branch essential git://github.com/binaryphile/dot_vim "$vim"
  cd "$vim"
  git remote set-url origin git@github.com:binaryphile/dot_vim
) }

create_ssh_config () {
  local home=$1
  local config
  local ssh

  ssh=$home/.ssh
  config=$ssh/config
  [[ ! -d $ssh ]] && mkdir -- "$ssh";:
  $chmod 700 "$ssh"
  { [[ ! -e $config ]] || ! grep --quiet 'Host github.com' "$config" ;} && {
    [[ -e $config ]] && echo >>"$config";:
    cat <<'    EOS' >>"$config"
      Host github.com
      Hostname localhost
      Port 12346
    EOS
  };:
  $chmod 600 "$config"
}

setup_bashrc () {
  local home=$1
  local bashrc

  bashrc=$home/.bashrc
  { [[ ! -e $bashrc ]] || ! grep --quiet bashrc=\$HOME/dotfiles/bash/bashrc "$bashrc" ;} && {
    [[ -e $bashrc ]] && echo >>"$bashrc"
    cat <<'    EOS' >>"$bashrc"
      bashrc=$HOME/dotfiles/bash/bashrc
      [[ -e $bashrc ]] && source "$bashrc"
      unset -v bashrc
    EOS
  }
}

setup_git () {
  local home=$1
  local git
  local local

  type git >/dev/null 2>&1 && return

  git=$home/git-2.7.4-static-avwob.tar.gz
  [[ -e $git ]] || return

  local=$home/.local
  [[ ! -d $local ]] && $mkdir "$local";:
  tar xzf "$git" -C "$local"
  [[ :$PATH: == *:"$home"/.local/bin:* ]] && return
  echo $'\n[[ :$PATH: != *:"$HOME"/.local/bin:* ]] && PATH+=:$HOME/.local/bin' >>"$home"/.bashrc
  PATH+=:$home/.local/bin
}

setup_liquidprompt () {
  local home=$1
  local config
  local dotfiles
  local liquidprompt

  config=$home/.config
  liquidprompt=$config/liquidprompt
  dotfiles=$home/dotfiles/liquidprompt
  [[ ! -d $liquidprompt ]] && $mkdir "$liquidprompt"
  $ln "$dotfiles"/liquidpromptrc  "$config"
  $ln "$dotfiles"/liquid.theme    "$liquidprompt"
  $ln "$dotfiles"/liquidprompt    "$liquidprompt"
}

setup_ssh () {
  local home=$1
  local dotfiles
  local ssh

  dotfiles=$home/dotfiles/ssh
  ssh=$home/.ssh
  [[ ! -d $ssh ]] && $mkdir "$ssh"
  $rm "$ssh"/config
  $ln "$dotfiles"/* "$ssh"
}

sourced () {
  [[ ${FUNCNAME[1]} == source ]]
}

strict_mode () {
  set -o errexit
  set -o nounset
  set -o pipefail
}

setup_globals
sourced && return
strict_mode on

(( $# )) || { echo "$usage"; exit ;}
setup_main "$@"
