#!/usr/bin/env bash

get <<'EOS'
  Usage:
    jiff mysql backup [options] full|master <host>

  Options:
    -n|--dry-run      don't do anything and report backup command

  Arguments:
    full|master     the type of backup
    host            the name of the host to back up and filename
EOS
usage=$__

mback_main () {
  local optionh=$1; shift
  local command=${1:-}
  local arg=${2:-}

  [[ -n $command ]] || die "$usage" 0
  case $command in
    full|master )
      [[ -n $arg ]] || die "$usage" 0
      mbackup "$command" "$arg" optionh
      ;;
    * )
      put "Error: no such command '$command'"
      die "$usage" 0
      ;;
  esac
}

mbackup () {
  local type=$1; shift
  local host=$1; shift
  $(grab dry_run_flag from "$@")
  local command=()

  case $type in
    full    ) command=( "${mysql_full_backup_command[@]}"   );;
    master  ) command=( "${mysql_master_backup_command[@]}" );;
    *       ) return 1
  esac
  (( dry_run_flag )) && { put "${command[*]}"; return ;}
  "${command[@]}" | gzip -v | redirect_to "$backup_dir/$host-$type-$(date "$format")".sql.gz
}

redirect_to  () { cat >"$1"      ;}
timestamp    () { date "$format" ;}

mback_init () {
  defaults=/opt/app/avwobt4/etc/mysql/backup.cnf
  database=avwob_production
  format=+%Y-%m-%d-%H%M
  backup_dir=/opt/app/avdata/backup

  mysql_backup_command=( mysqldump --defaults-extra-file="$defaults" )
  mysql_full_backup_command=(   "${mysql_backup_command[@]}"  --all-databases         --single-transaction              )
  mysql_master_backup_command=( "${mysql_backup_command[@]}"  --master-data           --single-transaction "$database"  )
  mysql_user_backup_command=(   "${mysql_backup_command[@]}"  --skip-extended-insert  --single-transaction mysql user   )
}

mback_init

sourced && return
strict_mode on

get <<'EOS'
  -n  --dry-run  ''  "don't do anything and report backup command"
EOS

$(parse_options __ "$@") || die "$usage" 0
mback_main      __ "$@"  || die "$usage"
